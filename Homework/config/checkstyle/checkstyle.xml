<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Исключаем проверку файла module-info.java -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- Позволяет использовать аннотацию @SuppressWarnings для подавления проверок -->
    <module name="SuppressWarningsFilter"/>

    <!-- Фильтр для подавления проверок с помощью комментариев -->
    <module name="SuppressWithNearbyTextFilter">
        <property name="nearbyTextPattern"
                  value="CHECKSTYLE.SUPPRESS\: (\w+) for ([+-]\d+) lines"/>
        <property name="checkPattern" value="$1"/>
        <property name="lineRange" value="$2"/>
    </module>

    <!-- Ограничение длины строки (максимум 120 символов) -->
    <module name="LineLength">
        <property name="max" value="120"/>
        <property name="ignorePattern" value="^package.*|^import.*|http://|https://"/>
    </module>

    <module name="TreeWalker">
        <!-- Проверка, что имя файла совпадает с именем внешнего класса -->
        <module name="OuterTypeFilename"/>

        <!-- Запрещает использование Unicode-символов в виде \uXXXX -->
        <module name="AvoidEscapedUnicodeCharacters"/>

        <!-- Проверка, что файл содержит только один верхнеуровневый класс -->
        <module name="OneTopLevelClass"/>

        <!-- Запрещает перенос строк в package, import и static import -->
        <module name="NoLineWrap">
            <property name="tokens" value="PACKAGE_DEF, IMPORT, STATIC_IMPORT"/>
        </module>

        <!-- Требует использование фигурных скобок для управляющих конструкций -->
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
        </module>

        <!-- Проверка расположения правой фигурной скобки (на отдельной строке) -->
        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>

        <!-- Проверка на наличие пробелов после ключевых слов и операторов -->
        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE, LITERAL_RETURN"/>
        </module>

        <!-- Проверка на наличие пробелов вокруг операторов -->
        <module name="WhitespaceAround"/>

        <!-- Проверка, что в каждой строке содержится только одно выражение -->
        <module name="OneStatementPerLine"/>

        <!-- Запрещает несколько переменных в одной строке -->
        <module name="MultipleVariableDeclarations"/>

        <!-- Проверка стиля расположения массива (массивы должны быть объявлены с типом) -->
        <module name="ArrayTypeStyle"/>

        <!-- Требует наличие блока default в switch-конструкции -->
        <module name="MissingSwitchDefault"/>

        <!-- Проверка, что типы данных не содержат заглавную L для long (используйте строчную l) -->
        <module name="UpperEll"/>

        <!-- Проверка порядка модификаторов (public, protected, private) -->
        <module name="ModifierOrder"/>

        <!-- Проверка расположения точки при вызове методов (перенос на новую строку) -->
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot"/>
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>

        <!-- Проверка формата именования пакетов (только строчные буквы и цифры) -->
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>

        <!-- Проверка формата именования типов (PascalCase для классов, интерфейсов, перечислений) -->
        <module name="TypeName">
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF"/>
        </module>

        <!-- Проверка формата именования методов (camelCase) -->
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Проверка формата именования параметров метода (camelCase) -->
        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Проверка формата именования локальных переменных (camelCase) -->
        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Проверка формата именования параметров лямбда-функций (camelCase) -->
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Проверка отсутствия финализаторов (методов finalize()) -->
        <module name="NoFinalizer"/>

        <!-- Проверка наличия пустого описания для Javadoc-тегов -->
        <module name="NonEmptyAtclauseDescription"/>

        <!-- Проверка порядка Javadoc-тегов (@param, @return, @throws) -->
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
        </module>
    </module>
</module>

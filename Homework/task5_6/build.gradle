plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'org.yakdanol'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':task8')

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'org.aspectj:aspectjweaver:1.9.22'
	runtimeOnly 'org.aspectj:aspectjrt:1.9.22'

	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'

	// WireMock
	testImplementation 'org.wiremock:wiremock:3.9.1'
	implementation 'org.wiremock.integrations.testcontainers:wiremock-testcontainers-module:1.0-alpha-14'

	// Jetty
	testImplementation 'org.eclipse.jetty:jetty-server:9.4.56.v20240826'
	testImplementation 'org.eclipse.jetty:jetty-servlet:9.4.56.v20240826'
	testImplementation 'org.eclipse.jetty:jetty-util:9.4.56.v20240826'

	// Mockito
	testImplementation 'org.mockito:mockito-core:5.12.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'

	// AssertJ
	testImplementation 'org.assertj:assertj-core:3.26.3'

	// Testcontainers
	testImplementation 'org.testcontainers:testcontainers:1.20.2'
	testImplementation 'org.testcontainers:junit-jupiter:1.20.1'
	testImplementation 'org.testcontainers:postgresql:1.20.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport  // Генерация отчета после тестов
}

jacoco {
	toolVersion = "0.8.12"
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(
				files(classDirectories.files.collect {
					fileTree(dir: it, exclude: [
							'org/yakdanol/task5_6/model/**' // Исключение DTO из покрытия Jacoco
					])
				})
		)
	}
}
